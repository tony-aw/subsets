% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generic_rec.R
\name{sb_rec}
\alias{sb_rec}
\title{Access recursive subsets}
\usage{
sb_rec(lst, rec)
}
\arguments{
\item{lst}{a list, or list-like object.}

\item{rec}{a vector of length \code{p},
such that \code{lst[[rec]]} is equivalent to \verb{lst[[rec[1]]...[[rec[p]]]},
providing all but the final indexing results in a list. \cr
When on a certain subset level of a nested list,
multiple subsets with the same name exist,
only the first one will be selected when performing recursive indexing by name,
due to the recursive nature of this type of subsetting.}
}
\value{
The subsetted object.
}
\description{
The \code{sb_rec()} function allows the user to access recursive subsets of lists,
and can be combined (i.e. piped) with the generic methods provided by 'subsets'. \cr
}
\examples{
lst <- list(
  A = list(
    A = list(A = "AAA", B = "AAB"),
    A = list(A  = "AA2A", B = "AA2B"),
    B = list(A = "ABA", B = "ABB")
  ),
  B = list(
    A = list(A = "BAA", B = "BAB"),
    B = list(A = "BBA", B = "BBB")
  )
)
sb_rec(lst, c(1,2,2)) # this gives "AA2B"
sb_rec(lst, c("A", "B", "B")) # this gives "ABB"
sb_rec(lst, c(2,2,1)) # this gives "BBA"
sb_rec(lst, c("B", "B", "A")) # this gives "BBA"

# return a modified copy of the second-lowest level,
# where replace "ABB" is replaced with -1:
sb_rec(lst, c("A", "B")) |> sb_mod(i = "B", rp = list(-1)) 

# replace "AAA" with -1 BY REFERENCE:
sb_rec(lst, c("A", "A")) |> sb_set(i = "A", rp = list(-1))
lst # notice the first element is replaced by -1


}
