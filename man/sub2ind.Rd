% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sub2ind.R
\name{sub2ind}
\alias{sub2ind}
\alias{sub2coord}
\alias{coord2sub}
\alias{coord2ind}
\alias{ind2coord}
\title{Convert Subscripts to Coordinates, Coordinates to Flat Indices, and Vice-Versa}
\usage{
sub2coord(subs, x.ndims)

coord2sub(coords)

coord2ind(coords, x.dim, x.len, checks = TRUE)

ind2coord(ind, x.dim, x.len)
}
\arguments{
\item{subs}{a list of integer subscripts. \cr
The first element of the list corresponds to the first dimension,
the second element to the second dimensions, and so forth. \cr
The length of \code{subs} must be equal to the length of \code{x.dim}. \cr
One cannot give an empty subscript;
instead fill in something like \code{seq_len(dim(x)[margin])}.}

\item{x.ndims}{the number of dimensions of the object, i.e. \code{length(dim(x))}.}

\item{coords}{an integer matrix, giving the coordinate indices (subscripts) to convert. \cr
Each row is an index, and each column is the dimension. \cr
The number of columns of \code{coords} must be equal to the length of \code{x.dim}.}

\item{x.dim}{an integer vector giving the dimensions of the array in question. I.e. \code{dim(x)}.}

\item{x.len}{the length of the object, i.e. \code{length(x)}. This is needed to evaluate the dimensions.}

\item{checks}{logical, indicating if arguments checks should be performed. \cr
Defaults to \code{TRUE}. Can be set to \code{FALSE} for minor speed improvements, but not recommended.}

\item{ind}{an integer vector, giving the flat position indices to convert.}
}
\value{
The converted indices.
}
\description{
\code{sub2coord()} converts a list of integer subscripts to an integer matrix of coordinates. \cr
\code{coord2ind()} converts an integer matrix of coordinates to an integer vector of flat indices. \cr
\code{ind2coord()} converts an integer vector of flat indices to an integer matrix of coordinates. \cr
\code{coord2sub()} converts an integer matrix of coordinates to a list of integer subscripts. \cr
\cr
All of these functions are written to be memory-efficient. \cr
The \code{coord2ind()} is thus the opposite of \link{arrayInd},
and \code{ind2coord} is merely a convenient wrapper around \link{arrayInd}. \cr
\cr
}
\examples{
x.dim <- c(1000, 10, 4, 4)
x.len <- prod(x.dim)
x <- array(1:x.len, x.dim)
x[4,3,2, 1]
x[1,2,3,4]
coords <- rbind(c(4:1), 1:4)
ind <- coord2ind(coords, x.dim, x.len)
print(ind)
x[ind] == c(x[4, 3, 2, 1], x[1, 2, 3, 4]) # TRUE, TRUE
ind2coord(ind, x.dim, x.len)

}
